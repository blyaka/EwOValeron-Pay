apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pg-data
  namespace: evpay
spec:
  accessModes: ["ReadWriteOnce"]
  resources: { requests: { storage: 10Gi } }
---
apiVersion: apps/v1
kind: Deployment
metadata: { name: pg, namespace: evpay, labels: { app: pg } }
spec:
  replicas: 1
  selector: { matchLabels: { app: pg } }
  template:
    metadata: { labels: { app: pg } }
    spec:
      containers:
      - name: postgres
        image: postgres:16-alpine
        ports: [ { containerPort: 5432 } ]
        env:
        - { name: POSTGRES_PASSWORD, value: "postgres" }
        - { name: POSTGRES_DB, value: "ev_main" }
        volumeMounts:
        - { name: data, mountPath: /var/lib/postgresql/data }
      volumes:
      - name: data
        persistentVolumeClaim: { claimName: pg-data }
---
apiVersion: v1
kind: Service
metadata: { name: pg, namespace: evpay }
spec:
  selector: { app: pg }
  ports: [ { port: 5432, targetPort: 5432 } ]


apiVersion: apps/v1
kind: Deployment
metadata: { name: redis, namespace: evpay, labels: { app: redis } }
spec:
  replicas: 1
  selector: { matchLabels: { app: redis } }
  template:
    metadata: { labels: { app: redis } }
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        args: ["redis-server","--appendonly","yes"]
        ports: [ { containerPort: 6379 } ]
---
apiVersion: v1
kind: Service
metadata: { name: redis, namespace: evpay }
spec:
  selector: { app: redis }
  ports:
    - name: redis
      port: 6379
      targetPort: 6379



apiVersion: apps/v1
kind: Deployment
metadata: { name: rabbit, namespace: evpay, labels: { app: rabbit } }
spec:
  replicas: 1
  selector: { matchLabels: { app: rabbit } }
  template:
    metadata: { labels: { app: rabbit } }
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3.13-management
        env:
        - { name: RABBITMQ_DEFAULT_USER, value: "user" }
        - { name: RABBITMQ_DEFAULT_PASS, value: "pass" }
        ports:
        - { containerPort: 5672 }    # AMQP
        - { containerPort: 15672 }   # HTTP UI
---
apiVersion: v1
kind: Service
metadata: { name: rabbit, namespace: evpay }
spec:
  selector: { app: rabbit }
  ports:
  - { name: amqp, port: 5672, targetPort: 5672 }
  - { name: http, port: 15672, targetPort: 15672 }